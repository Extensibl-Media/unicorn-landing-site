---
// import { AuthDebug } from "@/components/auth/AuthDebug";
import Layout from "../../layouts/Layout.astro";
import { UpdatePassword } from "@/components/auth/UpdatePasswordForm";
import { createServerClient, parseCookieHeader } from "@supabase/ssr";
import {
    PUBLIC_SUPABASE_ANON_KEY,
    PUBLIC_SUPABASE_URL,
} from "astro:env/client";
const supabase = createServerClient(
    PUBLIC_SUPABASE_URL,
    PUBLIC_SUPABASE_ANON_KEY,
    {
        auth: {
            detectSessionInUrl: true,
            flowType: "pkce",
        },
        cookies: {
            getAll() {
                return parseCookieHeader(
                    Astro.request.headers.get("Cookie") ?? "",
                );
            },
            setAll(cookiesToSet) {
                cookiesToSet.forEach(({ name, value, options }) =>
                    Astro.cookies.set(name, value, options),
                );
            },
        },
    },
);

const { cookies, redirect } = Astro;

const accessToken = cookies.get(`sb-access-token`);
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
    console.log("no access or refresh token");
    return redirect("/");
}

const { data, error } = await supabase.auth.setSession({
    refresh_token: refreshToken.value,
    access_token: accessToken.value,
});

console.log(data);

if (error) {
    cookies.delete("sb-access-token", {
        path: "/",
    });
    cookies.delete("sb-refresh-token", {
        path: "/",
    });

    return redirect("/");
}

if (Astro.request.method === "POST") {
    const body = await Astro.request.json();

    if (body.logout) {
        cookies.delete("sb-access-token", {
            path: "/",
        });
        cookies.delete("sb-refresh-token", {
            path: "/",
        });
    }
}
---

<Layout title="Reset Password">
    <div
        class="container flex items-center justify-center min-h-screen max-w-screen-sm mx-auto px-4 py-8"
    >
        <UpdatePassword client:load />
    </div>
</Layout>
