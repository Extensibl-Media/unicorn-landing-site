---
// src/pages/admin/events/new.astro
import AdminLayout from "@/layouts/AdminLayout.astro";
import { NewEventForm } from "@/components/admin/new-event-form";
import { createAdminClient } from "@/lib/supabase/admin";

// Handling form submission
if (Astro.request.method === "POST") {
    try {
        const formData = await Astro.request.formData();

        // Extract form data
        const name = formData.get("name") as string;
        const club_id = formData.get("club_id")
            ? (formData.get("club_id") as string)
            : null;
        const description = formData.get("description") as string;
        const dateStr = formData.get("date") as string;
        const latitude = formData.get("latitude")
            ? parseFloat(formData.get("latitude") as string)
            : null;
        const longitude = formData.get("longitude")
            ? parseFloat(formData.get("longitude") as string)
            : null;
        const address = (formData.get("address") as string) || "";
        const city = formData.get("city") as string;
        const state = formData.get("state") as string;

        const cover_image = formData.get("cover_image") as string;
        const parking_details =
            (formData.get("parking_details") as string) || null;
        const additional_info =
            (formData.get("additional_info") as string) || null;
        const start_time = (formData.get("start_time") as string) || null;
        const end_time = (formData.get("end_time") as string) || null;
        const all_day = formData.get("all_day") === "true";
        const sponsored_event = formData.get("sponsored_event") === "true";

        // Create Supabase client with admin permissions
        const supabase = createAdminClient();

        const { error } = await supabase.from("events").insert({
            name,
            club_id,
            description,
            date: new Date(dateStr).toISOString(),
            latitude,
            longitude,
            address,
            city,
            state,
            cover_image,
            parking_details,
            additional_info,
            start_time,
            end_time,
            all_day,
            sponsored_event,
            created_at: new Date().toISOString(),
        });

        if (error) {
            console.error("Error adding event:", error);
            // Return with error message instead of throwing
            return new Response(
                JSON.stringify({
                    success: false,
                    message: error.message,
                    details: error,
                }),
                {
                    status: 500,
                    headers: {
                        "Content-Type": "application/json",
                    },
                },
            );
        }

        // Redirect to events page after successful creation
        return Astro.redirect("/admin/events");
    } catch (error) {
        console.error("Error processing form:", error);
    }
}
---

<AdminLayout title="Add New Event">
    <div class="space-y-4">
        <div class="flex justify-between items-center">
            <div>
                <h1 class="text-2xl font-bold tracking-tight">Add New Event</h1>
                <p class="text-muted-foreground">
                    Create a new event in the database.
                </p>
            </div>
            <a
                href="/admin/events"
                class="bg-secondary text-secondary-foreground px-4 py-2 rounded-md"
            >
                Back to Events
            </a>
        </div>
        <NewEventForm client:load />
    </div>
</AdminLayout>
