---
// src/pages/admin/uploads.astro
import AdminLayout from "@/layouts/AdminLayout.astro";
import { UserUploadsTable } from "@/components/admin/content-uploads-table";
import { createClient } from "@/lib/supabase/server";

// Get URL params
const uploadType = Astro.url.searchParams.get("type") || "all"; // all, avatars, profile_uploads
const status = Astro.url.searchParams.get("status") || "PENDING"; // all, pending, approved, rejected
const page = parseInt(Astro.url.searchParams.get("page") || "0");
const pageSize = 20; // We'll show more per page for images
const searchQuery = Astro.url.searchParams.get("search") || "";

// Create Supabase client
const supabase = createClient({
    headers: Astro.request.headers,
    cookies: Astro.cookies,
});

// Calculate query range
const from = page * pageSize;
const to = from + pageSize - 1;

let newQuery = supabase.from("content_moderation_images").select(
    `
      *,
      profile:profiles!inner(id, username, email)
      `,
    { count: "exact" },
);

if (uploadType === "avatars") {
    newQuery = newQuery.eq("image_type", "AVATAR");
} else if (uploadType === "profile_uploads") {
    newQuery = newQuery.eq("image_type", "PROFILE_IMAGE");
}

const {
    data,
    error: uploadsError,
    count: newCount,
} = await newQuery.eq("status", status).limit(pageSize).range(from, to);

if (uploadsError) {
    console.error("Error fetching uploads:", uploadsError);
}
// Calculate pagination
const totalCount = newCount || 0;
const totalPages = Math.ceil(totalCount / pageSize);
---

<AdminLayout title="User Uploads Moderation">
    <div class="space-y-6">
        <div class="flex justify-between items-center">
            <div>
                <h1 class="text-2xl font-bold tracking-tight">
                    User Uploads Moderation
                </h1>
                <p class="text-muted-foreground">
                    Review and moderate user uploaded content
                </p>
            </div>
        </div>

        <UserUploadsTable
            currentPage={page}
            totalPages={totalPages}
            images={data}
            client:load
            totalCount={totalCount}
            uploadType={uploadType}
            searchQuery={searchQuery}
        />
    </div>
</AdminLayout>
