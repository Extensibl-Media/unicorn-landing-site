---
// src/pages/admin/podcasts/index.astro
import { PodcastsFilters } from "@/components/admin/community-post-filters";
import AdminLayout from "../../../layouts/AdminLayout.astro";
import { CommunityPostsTable } from "@/components/admin/community-posts-table";
import { Pagination } from "@/components/admin/blog-pagination";
import { createClient } from "@/lib/supabase/server";
import { getAdminPosts } from "@/lib/supabase/community-posts";

// Get URL params
const searchParams = Astro.url.searchParams;
const page = parseInt(searchParams.get("page") || "1");
const search = searchParams.get("search") || "";
const sortBy = searchParams.get("sortBy") || "created_at";
const sortOrder = searchParams.get("sortOrder") || "desc";

// Fetch podcasts with admin options
const { posts, count, pagination } = await getAdminPosts(
  Astro.request,
  Astro.cookies,
  {
    page,
    search,
    sortBy: sortBy as any,
    sortOrder: sortOrder as any,
  }
);

const supabase = createClient({
  headers: Astro.request.headers,
  cookies: Astro.cookies,
});
---

<AdminLayout title="Manage Podcasts">
  <div class="flex flex-col gap-4 w-full">
    <div class="flex justify-between items-center">
      <div>
        <h1 class="text-2xl font-bold">Community Posts</h1>
        <p class="text-muted-foreground">
          {pagination.total} posts
        </p>
      </div>
      <a
        href="/admin/community-posts/new"
        class="bg-primary text-primary-foreground px-4 py-2 rounded-md"
      >
        New Post
      </a>
    </div>

    <!-- Search and Filters component -->
    <!-- <PodcastsFilters
      client:only
      search={search}
      sortBy={sortBy}
      sortOrder={sortOrder}
    /> -->

    <!-- Podcasts Table component -->
    <CommunityPostsTable
      client:only
      posts={posts}
      sortBy={sortBy}
      sortOrder={sortOrder}
    />

    <!-- Pagination component -->
    <div class="flex justify-between items-center">
      <p class="text-sm text-muted-foreground">
        Showing {posts.length} of {count} posts
      </p>
      <div class="flex gap-2">
        {
          pagination.pages > 1 && (
            <Pagination
              client:only
              currentPage={pagination.current}
              totalPages={pagination.pages}
            />
          )
        }
      </div>
    </div>
  </div>
</AdminLayout>
