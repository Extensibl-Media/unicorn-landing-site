---
// src/pages/admin/posts/index.astro
import { PostsFilters } from "@/components/admin/posts-filters";
import AdminLayout from "../../../layouts/AdminLayout.astro";
import { getAdminPosts } from "@/lib/supabase/blog";
import { PostsTable } from "@/components/admin/posts-table";
import { Pagination } from "@/components/admin/blog-pagination";

// Get URL params
const searchParams = Astro.url.searchParams;
const page = parseInt(searchParams.get("page") || "1");
const search = searchParams.get("search") || "";
const status = searchParams.get("status") || "all";
const sortBy = searchParams.get("sortBy") || "updated_at";
const sortOrder = searchParams.get("sortOrder") || "desc";
const dateFrom = searchParams.get("dateFrom") || undefined;
const dateTo = searchParams.get("dateTo") || undefined;
const tagId = searchParams.get("tag") || undefined;

// Fetch posts with admin options
const { posts, count, pagination, stats } = await getAdminPosts(
  Astro.request,
  Astro.cookies,
  {
    page,
    search,
    status: status as any,
    sortBy: sortBy as any,
    sortOrder: sortOrder as any,
    dateFrom,
    dateTo,
    tagId,
  },
);
---

<AdminLayout title="Manage Posts">
  <div class="space-y-4">
    <div class="flex justify-between items-center">
      <div>
        <h1 class="text-2xl font-bold">Posts</h1>
        <p class="text-muted-foreground">
          {stats.published} published · {stats.drafts} drafts · {stats.archived}
          archived
        </p>
      </div>

      <a
        href="/admin/blog/new"
        class="bg-primary text-primary-foreground px-4 py-2 rounded-md"
      >
        New Post
      </a>
    </div>

    <!-- Search and Filters component here -->
    <PostsFilters
      client:only
      search={search}
      status={status}
      sortBy={sortBy}
      sortOrder={sortOrder}
      dateFrom={dateFrom}
      dateTo={dateTo}
    />

    <!-- Posts Table component here -->
    <PostsTable
      client:only
      posts={posts}
      sortBy={sortBy}
      sortOrder={sortOrder}
    />

    <!-- Pagination component here -->
    <div class="flex justify-between items-center">
      <p class="text-sm text-muted-foreground">
        Showing {posts.length} of {count} posts
      </p>

      <div class="flex gap-2">
        {
          pagination.pages > 1 && (
            <Pagination
              client:only
              currentPage={pagination.current}
              totalPages={pagination.pages}
            />
          )
        }
      </div>
    </div>
  </div>
</AdminLayout>
